#!/usr/bin/env python

"""
Report dead links from files.
Inspired by https://github.com/nschloe/deadlink.
"""

from __future__ import annotations

import re
import sys
from argparse import ArgumentParser, FileType
from typing import TextIO

import requests
from requests.exceptions import RequestException, Timeout, TooManyRedirects
from tqdm import tqdm

URL_RE = re.compile(
    r"http(?:s)?:\/\/.(?:www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b(?:[-a-zA-Z0-9@:%_\+.~#?&/=]*)"
)
HEADERS = {
    "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36"
}


def process_file(file: TextIO) -> list[str]:
    """Return the list of dead urls from `file`."""
    contents = file.read().strip()
    urls = re.findall(URL_RE, contents)

    dead = []

    for url in tqdm(urls, disable=not args.progress):
        try:
            r = requests.get(url, timeout=10, headers=HEADERS)
        except (Timeout, TooManyRedirects, RequestException):
            print(f"{url} raised an exception")
            continue

        sc = r.status_code
        if sc != 200:
            dead.append((url, sc))

    return dead


def main():
    dead = []
    for file in args.input:
        dead.extend(process_file(file))

    for (url, sc) in dead:
        print(f"{sc:3d} -- {url}")


if __name__ == "__main__":
    parser = ArgumentParser()
    parser.add_argument(
        "-i",
        "--input",
        nargs="+",
        type=FileType("r"),
        default=(None if sys.stdin.isatty() else [sys.stdin]),
    )
    parser.add_argument(
        "-p", "--progress", action="store_true", help="Use tqdm to show progress."
    )
    args = parser.parse_args()

    main()
